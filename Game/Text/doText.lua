table.insert(printingText,("obj" .. screenText))
objName=("obj" .. screenText)
printingText[objName]={}
for i,v in ipairs(processText) do
	if i <= 3 then
		table.insert(printingText[objName],v)
	else
		function queue(inp,outp)
			if v == inp then
				table.insert(printingText[objName],outp)
			end
		end
		queue("a",lowerA)
		queue("b",lowerB)
		queue("c",lowerC)
		queue("d",lowerD)
		queue("e",lowerE)
		queue("f",lowerF)
		queue("g",lowerG)
		queue("h",lowerH)
		queue("i",lowerI)
		queue("j",lowerJ)
		queue("k",lowerK)
		queue("l",lowerL)
		queue("m",lowerM)
		queue("n",lowerN)
		queue("o",lowerO)
		queue("p",lowerP)
		queue("q",lowerQ)
		queue("r",lowerR)
		queue("s",lowerS)
		queue("t",lowerT)
		queue("u",lowerU)
		queue("v",lowerV)
		queue("w",lowerW)
		queue("x",lowerX)
		queue("y",lowerY)
		queue("z",lowerZ)
		queue("Naha",lowerNahA)
		queue("Nahi",lowerNahI)
		queue("Nahe",lowerNahE)
		queue("Naho",lowerNahO)
		queue("Spaa",lowerSpaA)
		queue("Spai",lowerSpaI)
		queue("Spau",lowerSpaU)
		queue("Spae",lowerSpaE)
		queue("Spao",lowerSpaO)
		queue("Span",lowerSpaN)
		queue("A",upperA)
		queue("B",upperB)
		queue("C",upperC)
		queue("D",upperD)
		queue("E",upperE)
		queue("F",upperF)
		queue("G",upperG)
		queue("H",upperH)
		queue("I",upperI)
		queue("J",upperJ)
		queue("K",upperK)
		queue("L",upperL)
		queue("M",upperM)
		queue("N",upperN)
		queue("O",upperO)
		queue("P",upperP)
		queue("Q",upperQ)
		queue("R",upperR)
		queue("S",upperS)
		queue("T",upperT)
		queue("U",upperU)
		queue("V",upperV)
		queue("W",upperW)
		queue("X",upperX)
		queue("Y",upperY)
		queue("Z",upperZ)
		queue("NahA",upperNahA)
		queue("NahI",upperNahI)
		queue("NahE",upperNahE)
		queue("NahO",upperNahO)
		queue("SpaA",upperSpaA)
		queue("SpaI",upperSpaI)
		queue("SpaU",upperSpaU)
		queue("SpaE",upperSpaE)
		queue("SpaO",upperSpaO)
		queue("SpaN",upperSpaN)
		queue("Sela",lowerSelA)
		queue("Selb",lowerSelB)
		queue("Selc",lowerSelC)
		queue("Seld",lowerSelD)
		queue("Sele",lowerSelE)
		queue("Self",lowerSelF)
		queue("Selg",lowerSelG)
		queue("Selh",lowerSelH)
		queue("Seli",lowerSelI)
		queue("Selj",lowerSelJ)
		queue("Selk",lowerSelK)
		queue("Sell",lowerSelL)
		queue("Selm",lowerSelM)
		queue("Seln",lowerSelN)
		queue("Selo",lowerSelO)
		queue("Selp",lowerSelP)
		queue("Selq",lowerSelQ)
		queue("Selr",lowerSelR)
		queue("Sels",lowerSelS)
		queue("Selt",lowerSelT)
		queue("Selu",lowerSelU)
		queue("Selv",lowerSelV)
		queue("Selw",lowerSelW)
		queue("Selx",lowerSelX)
		queue("Sely",lowerSelY)
		queue("Selz",lowerSelZ)
		queue("SelNaha",lowerSelNahA)
		queue("SelNahi",lowerSelNahI)
		queue("SelNahe",lowerSelNahE)
		queue("SelNaho",lowerSelNahO)
		queue("SelSpaa",lowerSelSpaA)
		queue("SelSpai",lowerSelSpaI)
		queue("SelSpau",lowerSelSpaU)
		queue("SelSpae",lowerSelSpaE)
		queue("SelSpao",lowerSelSpaO)
		queue("SelSpan",lowerSelSpaN)
		queue("SelA",upperSelA)
		queue("SelB",upperSelB)
		queue("SelC",upperSelC)
		queue("SelD",upperSelD)
		queue("SelE",upperSelE)
		queue("SelF",upperSelF)
		queue("SelG",upperSelG)
		queue("SelH",upperSelH)
		queue("SelI",upperSelI)
		queue("SelJ",upperSelJ)
		queue("SelK",upperSelK)
		queue("SelL",upperSelL)
		queue("SelM",upperSelM)
		queue("SelN",upperSelN)
		queue("SelO",upperSelO)
		queue("SelP",upperSelP)
		queue("SelQ",upperSelQ)
		queue("SelR",upperSelR)
		queue("SelS",upperSelS)
		queue("SelT",upperSelT)
		queue("SelU",upperSelU)
		queue("SelV",upperSelV)
		queue("SelW",upperSelW)
		queue("SelX",upperSelX)
		queue("SelY",upperSelY)
		queue("SelZ",upperSelZ)
		queue("SelNahA",upperSelNahA)
		queue("SelNahI",upperSelNahI)
		queue("SelNahE",upperSelNahE)
		queue("SelNahO",upperSelNahO)
		queue("SelSpaA",upperSelSpaA)
		queue("SelSpaI",upperSelSpaI)
		queue("SelSpaU",upperSelSpaU)
		queue("SelSpaE",upperSelSpaE)
		queue("SelSpaO",upperSelSpaO)
		queue("SelSpaN",upperSelSpaN)
		queue(" ",space)
	end
end
